{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajes\\\\Desktop\\\\Hackathon-code\\\\client\\\\src\\\\Components\\\\Banner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Banner.css\"; // Optional CSS import for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatTime = seconds => {\n  const days = Math.floor(seconds / (24 * 3600));\n  seconds %= 24 * 3600;\n  const hours = Math.floor(seconds / 3600);\n  seconds %= 3600;\n  const minutes = Math.floor(seconds / 60);\n  const secs = seconds % 60;\n  return {\n    days,\n    hours,\n    minutes,\n    secs\n  };\n};\nconst Banner = () => {\n  _s();\n  const [bannerData, setBannerData] = useState({\n    description: \"\",\n    timer: 0,\n    link: \"\",\n    isVisible: false\n  });\n  useEffect(() => {\n    // Fetch the banner data from the backend\n    axios.get(\"http://localhost:5000/api/banner\").then(response => {\n      setBannerData(response.data);\n    }).catch(error => {\n      console.error(\"There was an error fetching the banner data!\", error);\n    });\n  }, []);\n  useEffect(() => {\n    let countdown;\n    if (bannerData.isVisible && bannerData.timer > 0) {\n      countdown = setInterval(() => {\n        setBannerData(prevState => ({\n          ...prevState,\n          timer: prevState.timer - 1\n        }));\n      }, 1000);\n    }\n\n    // Clear the interval when the timer reaches zero\n    if (bannerData.timer <= 0) {\n      clearInterval(countdown);\n    }\n    return () => clearInterval(countdown);\n  }, [bannerData.timer, bannerData.isVisible]);\n  const {\n    days,\n    hours,\n    minutes,\n    secs\n  } = formatTime(bannerData.timer);\n  if (!bannerData.isVisible || bannerData.timer <= 0) {\n    return null; // Don't render the banner if it's not visible or timer has ended\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"banner\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: bannerData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"timer\",\n      children: [\"Time remaining: \", days, \" days \", hours, \" hours \", minutes, \" minutes \", secs, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), bannerData.link && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: bannerData.link,\n      children: \"Learn More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Banner, \"JDcBxovm/CSg66oJah1qpngw5+4=\");\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","formatTime","seconds","days","Math","floor","hours","minutes","secs","Banner","_s","bannerData","setBannerData","description","timer","link","isVisible","get","then","response","data","catch","error","console","countdown","setInterval","prevState","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["C:/Users/rajes/Desktop/Hackathon-code/client/src/Components/Banner.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Banner.css\"; // Optional CSS import for styling\r\n\r\nconst formatTime = (seconds) => {\r\n  const days = Math.floor(seconds / (24 * 3600));\r\n  seconds %= 24 * 3600;\r\n  const hours = Math.floor(seconds / 3600);\r\n  seconds %= 3600;\r\n  const minutes = Math.floor(seconds / 60);\r\n  const secs = seconds % 60;\r\n\r\n  return {\r\n    days,\r\n    hours,\r\n    minutes,\r\n    secs,\r\n  };\r\n};\r\n\r\nconst Banner = () => {\r\n  const [bannerData, setBannerData] = useState({\r\n    description: \"\",\r\n    timer: 0,\r\n    link: \"\",\r\n    isVisible: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch the banner data from the backend\r\n    axios\r\n      .get(\"http://localhost:5000/api/banner\")\r\n      .then((response) => {\r\n        setBannerData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error fetching the banner data!\", error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let countdown;\r\n\r\n    if (bannerData.isVisible && bannerData.timer > 0) {\r\n      countdown = setInterval(() => {\r\n        setBannerData((prevState) => ({\r\n          ...prevState,\r\n          timer: prevState.timer - 1,\r\n        }));\r\n      }, 1000);\r\n    }\r\n\r\n    // Clear the interval when the timer reaches zero\r\n    if (bannerData.timer <= 0) {\r\n      clearInterval(countdown);\r\n    }\r\n\r\n    return () => clearInterval(countdown);\r\n  }, [bannerData.timer, bannerData.isVisible]);\r\n\r\n  const { days, hours, minutes, secs } = formatTime(bannerData.timer);\r\n\r\n  if (!bannerData.isVisible || bannerData.timer <= 0) {\r\n    return null; // Don't render the banner if it's not visible or timer has ended\r\n  }\r\n\r\n  return (\r\n    <div className=\"banner\">\r\n      <p>{bannerData.description}</p>\r\n      <p className=\"timer\">\r\n        Time remaining: {days} days {hours} hours {minutes} minutes {secs} seconds\r\n      </p>\r\n      {bannerData.link && <a href={bannerData.link}>Learn More</a>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}